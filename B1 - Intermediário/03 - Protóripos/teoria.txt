||---------------------------------------------------------------------------||

    Útil quando vários objetos devem ter os mesmos métodos e até compartilhar
    algumas propriedades;

    Cada objeto vai t er uma referência para outro objeto. Sempre que uma
    propriedade ou método não forem disponíveis no objeto original, a
    procura é feita no protótipo;

    (exemplo mais direto)

    criar um objeto vazio e chamar o método .toString() dele;

    como não existe essa chave, ela vai ser procurada na propriedade
    _proto_ que tem uma referência para outro objeto

    _proto_ não é padrçao, mas Object.getPrototypeOf() é

    Esse uso direto é o conceito de herança:
    - Objetos de um mesmo tipo possuem propriedades e comportamentos iguais

    O objeto Object tem toda a API para manipular objetos.
    Seu método Object.create() cria um novo objeto e faz a ligação com seu 
    protótipo

     (função construtora)
    
    Quando essa função é chamada com o operador new, um novo objeto é criado
    seguindo os passos dessa função
    Dessa forma, todas as instâncias criadas a partir dessa função irão
    compartilhar o mesmo protótipo.

||---------------------------------------------------------------------------||